{"version":3,"sources":["components/Category.js","utils/contexts.js","components/CategoriesMenu.js","components/Product.js","components/ProductsFilters.js","components/ProductsSorting.js","components/ProductsGrid.js","components/CheckoutProduct.js","components/Checkout.js","containers/Store.js","App.js","serviceWorker.js","index.js"],"names":["Category","state","showing","handleOnClick","_this","props","onSelected","setState","_this$props","this","name","id","children","isSelected","react_default","a","createElement","Fragment","Button_default","color","onClick","value","className","React","PureComponent","StoreContext","createContext","CategoriesMenu","renderProducts","category","products","context","onSelectCategory","filter","product","sublevel_id","renderCategory","key","selectedCategory","components_Category","sublevels","undefined","map","_this2","Consumer","_ref","categories","contextType","Product","available","quantity","price","Card_default","disabled","CardMedia_default","image","title","ProductsFilters","searchValue","TextField_default","label","onChange","event","onSearch","margin","placeholder","sortTypes","ProductsSorting","direction","handleOnSort","type","onSort","newDirection","currentSort","variant","Icon_default","ProductsGrid","renderProduct","components_Product","Object","assign","onSelectProduct","length","Paper_default","elevation","components_ProductsFilters","components_ProductsSorting","defaultProps","CheckoutProduct","productData","productTotal","Checkout","totalAmount","getRawPrice","components_CheckoutProduct","groupedProducts","groupBy","productsList","keys","parseInt","replace","Store","categoryProducts","filteredProducts","cartProducts","JSON","parse","localStorage","getItem","showCart","showMenu","handleOnSearch","target","includes","sortedProducts","sortBy","reverse","handleOnSelectProduct","toConsumableArray","concat","setItem","stringify","switchCart","switchMobileMenu","_this$state","Provider","AppBar_default","Toolbar_default","IconButton_default","aria-label","Menu_default","Typography_default","components_CategoriesMenu","components_ProductsGrid","components_Checkout","theme","createMuiTheme","palette","primary","main","secondary","App","styles","containers_Store","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9b4adc84.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nclass Category extends React.PureComponent {\r\n  state = {\r\n    showing: false\r\n  }\r\n\r\n  handleOnClick = () => {\r\n    if (this.props.onSelected) {\r\n      return this.props.onSelected();\r\n    }\r\n\r\n    this.setState({\r\n      showing: !this.state.showing\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { name, id, children, isSelected } = this.props;\r\n    const { showing } = this.state;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Button\r\n          color={isSelected ? 'secondary' : 'primary'}\r\n          onClick={this.handleOnClick}\r\n          value={id}\r\n        >\r\n          {name}\r\n        </Button>\r\n        {\r\n          showing && <div className=\"category-content\">{children}</div>\r\n        }\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Category;\r\n","import React from 'react';\r\n\r\nexport const StoreContext = React.createContext();\r\n","import React from 'react';\r\n\r\nimport Category from './Category';\r\nimport { StoreContext } from '../utils/contexts';\r\n\r\n\r\nclass CategoriesMenu extends React.PureComponent {\r\n  static contextType = StoreContext;\r\n\r\n  renderProducts = (category) => {\r\n    const { products } = this.context;\r\n\r\n    this.props.onSelectCategory(products.filter((product) => product.sublevel_id === category.id), category);\r\n  }\r\n\r\n  renderCategory = (category, key) => {\r\n    const { selectedCategory } = this.props;\r\n\r\n    return (\r\n      <Category\r\n        name={category.name}\r\n        id={category.id}\r\n        onSelected={!category.sublevels ? () => this.renderProducts(category) : undefined }\r\n        key={key}\r\n        isSelected={!category.sublevels && selectedCategory.id === category.id}\r\n      >\r\n        {category.sublevels && category.sublevels.map(this.renderCategory)}\r\n      </Category>\r\n    );\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <p>Categorias</p>\r\n        <StoreContext.Consumer>\r\n          {({ categories }) => categories.map(this.renderCategory)}\r\n        </StoreContext.Consumer>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CategoriesMenu;\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\n\r\nclass Product extends React.PureComponent {\r\n  render() {\r\n    const { name, available, quantity, price, onSelected } = this.props;\r\n\r\n    return (\r\n      <Card className=\"product\">\r\n        <div className=\"product-content\">\r\n          <div className=\"name\">{name}</div>\r\n          {!available && <div className=\"not-available\">No Disponible</div>}\r\n          {available && <div className=\"available\">Disponibles: {quantity}</div>}\r\n          <div className=\"price\">Precio: <span>{price}</span></div>\r\n          <Button color=\"primary\" disabled={!available} onClick={() => onSelected(this.props)}>Agregar</Button>\r\n        </div>\r\n        <CardMedia\r\n          className=\"product-image\"\r\n          image=\"https://pm1.narvii.com/6518/0690240f01ad63f01fb7f6f27477b56ab033f764_hq.jpg\"\r\n          title=\"Live from space album cover\"\r\n        />\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Product;\r\n","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nclass ProductsFilters extends React.PureComponent {\r\n  render() {\r\n    const { searchValue } =  this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"product-filters-label\">Filtros: </div>\r\n        <div className=\"product-filters\">\r\n            <TextField\r\n            id=\"standard-name\"\r\n            label=\"Nombre\"\r\n            value={searchValue}\r\n            onChange={(event) => this.props.onSearch(event, 'name')}\r\n            margin=\"normal\"\r\n            />\r\n            <div className=\"price-search\">\r\n            <TextField\r\n                id=\"standard-name\"\r\n                label=\"Precio Minimo\"\r\n                value={searchValue}\r\n                onChange={(event) => this.props.onSearch(event, 'priceMin')}\r\n                placeholder=\"$1,000.00\"\r\n                margin=\"normal\"\r\n            />\r\n            <TextField\r\n                id=\"standard-name\"\r\n                label=\"Precio Maximo\"\r\n                value={searchValue}\r\n                onChange={(event) => this.props.onSearch(event, 'priceMax')}\r\n                placeholder=\"$5,000.00\"\r\n                margin=\"normal\"\r\n            />\r\n            </div>\r\n            <TextField\r\n            id=\"standard-name\"\r\n            label=\"Cantidad minima\"\r\n            value={searchValue}\r\n            onChange={(event) => this.props.onSearch(event, 'quantity')}\r\n            placeholder=\"1000\"\r\n            margin=\"normal\"\r\n            />\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProductsFilters;\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Icon from '@material-ui/core/Icon';\r\n\r\nconst sortTypes = [ 'name', 'price', 'quantity']; \r\n\r\n\r\nclass ProductsSorting extends React.PureComponent {\r\n  state = {\r\n    direction: 'asc'\r\n  }\r\n\r\n  handleOnSort = (type) => {\r\n    const { onSort } = this.props;\r\n    const newDirection = this.state.direction === 'asc' ? 'desc' : 'asc';\r\n\r\n    this.setState({\r\n      direction: newDirection\r\n    });\r\n\r\n    onSort(type, newDirection);\r\n  }\r\n\r\n  render() {\r\n    const { direction } = this.state;\r\n    const { currentSort } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"product-sorting-container\">\r\n          <div>Ordenar por: </div>\r\n          {sortTypes.map((type, key) => (\r\n            <Button variant=\"outlined\" key={key} onClick={() => this.handleOnSort(type)}>\r\n              {type}\r\n              {currentSort === type && direction === 'asc' && <Icon>arrow_drop_up</Icon>}\r\n              {currentSort === type && direction === 'desc' && <Icon>arrow_drop_down</Icon>}\r\n            </Button>\r\n          ))}\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProductsSorting;\r\n","import React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport Product from './Product';\r\nimport ProductsFilters from './ProductsFilters';\r\nimport ProductsSorting from './ProductsSorting';\r\n\r\nclass ProductsGrid extends React.PureComponent {\r\n  static defaultProps = {\r\n    products: []\r\n  };\r\n\r\n  renderProduct = (product, key) => {\r\n    return (\r\n      <Product key={key} {...product} onSelected={this.props.onSelectProduct} />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      products,\r\n      selectedCategory,\r\n      onSearch,\r\n      onSort,\r\n      currentSort,\r\n    } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <h2>{selectedCategory.name ? selectedCategory.name : 'Primero selecciona una categoria.'}</h2>\r\n        {products.length > 0 && <Paper className=\"filters-panel\" elevation={1}>\r\n          <ProductsFilters onSearch={onSearch} />\r\n          <ProductsSorting onSort={onSort} currentSort={currentSort} />\r\n        </Paper>}\r\n        <div className=\"products-container\">\r\n          {products.map(this.renderProduct)}\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProductsGrid;\r\n","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\n\r\n\r\nclass CheckoutProduct extends React.PureComponent {\r\n  render() {\r\n    const { productData, productTotal, quantity } = this.props;\r\n\r\n    return (\r\n      <Card className=\"product\">\r\n        <div className=\"product-content\">\r\n          <div className=\"name\">{productData.name}</div>\r\n          <div className=\"price\">Precio: <span>{productData.price}</span></div>\r\n          <div className=\"checkout-quantity\">Cantidad: {quantity}</div>\r\n          <div className=\"total\">Total: $ {productTotal}</div>\r\n        </div>\r\n        <CardMedia\r\n          className=\"product-image\"\r\n          image=\"https://pm1.narvii.com/6518/0690240f01ad63f01fb7f6f27477b56ab033f764_hq.jpg\"\r\n          title=\"Live from space album cover\"\r\n        />\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CheckoutProduct;\r\n","import React from 'react';\r\nimport { groupBy } from 'lodash';\r\n\r\nimport { getRawPrice } from '../containers/Store'\r\nimport CheckoutProduct from './CheckoutProduct';\r\n\r\nclass Checkout extends React.PureComponent {\r\n  totalAmount = 0;\r\n  state = {\r\n    totalAmount: 0\r\n  }\r\n\r\n  renderProduct = (product) => {\r\n    const quantity = product.length;\r\n    const productData = product[0];\r\n    const productTotal = getRawPrice(productData.price) * quantity;\r\n\r\n    this.totalAmount += productTotal;\r\n\r\n    return (\r\n      <CheckoutProduct\r\n        productData={product}\r\n        productTotal={productTotal}\r\n        quantity={quantity}\r\n      />\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      totalAmount: this.totalAmount\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { products } = this.props;\r\n    const groupedProducts = groupBy(products, 'name');\r\n    const productsList = Object.keys(groupedProducts).map((product) => groupedProducts[product]);\r\n\r\n    return (\r\n      <div className=\"checkout-grid\">\r\n        {products.length > 0 && <div>Cuenta total: $ {this.state.totalAmount}</div>}\r\n        {!products.length && <div className=\"no-products\">Aun no hay productos en el carrito.</div>}\r\n        {productsList.map(this.renderProduct)}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Checkout;","import React from 'react';\r\nimport { sortBy } from 'lodash';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Button from '@material-ui/core/Button';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nimport CategoriesMenu from '../components/CategoriesMenu';\r\nimport ProductsGrid from '../components/ProductsGrid';\r\nimport Checkout from '../components/Checkout';\r\nimport { categories, products } from '../utils/data.json';\r\nimport { StoreContext } from '../utils/contexts';\r\n\r\nexport function getRawPrice(price) {\r\n  return parseInt(price.replace('$','').replace(',', ''));\r\n}\r\n\r\nclass Store extends React.PureComponent {\r\n  state = {\r\n    categoryProducts: [],\r\n    selectedCategory: {},\r\n    filteredProducts: [],\r\n    currentSort: null,\r\n    cartProducts: JSON.parse(localStorage.getItem('cartProducts')) || [],\r\n    showCart: false,\r\n    showMenu: true\r\n  }\r\n\r\n  onSelectCategory = (products, selectedCategory) => {\r\n    this.setState({\r\n      categoryProducts: products,\r\n      filteredProducts: products,\r\n      selectedCategory,\r\n    });\r\n  }\r\n\r\n  handleOnSearch = (event, type) => {\r\n    const { categoryProducts } =  this.state;\r\n    const value = event.target.value;\r\n    let filteredProducts;\r\n\r\n    switch (type) {\r\n      case 'name':\r\n        if (value.length > 0) {\r\n          filteredProducts = categoryProducts.filter((product) => product.name.includes(value))\r\n        } else {\r\n          filteredProducts = categoryProducts;\r\n        }\r\n      break;\r\n      case 'priceMin':\r\n        filteredProducts = categoryProducts.filter((product) => getRawPrice(product.price) > value)\r\n      break;\r\n      case 'priceMax':\r\n        filteredProducts = categoryProducts.filter((product) => getRawPrice(product.price) < value)\r\n      break;\r\n      case 'quantity':\r\n        filteredProducts = categoryProducts.filter((product) => product.quantity > value)\r\n      break;\r\n      default:\r\n      break;\r\n    }\r\n\r\n    this.setState({\r\n      filteredProducts,\r\n    });\r\n  }\r\n\r\n  handleOnSort = (type, direction) => {\r\n    const { filteredProducts } = this.state;\r\n    let sortedProducts = null;\r\n\r\n    switch (type) {\r\n      case 'name':\r\n        if (direction === 'asc') {\r\n          sortedProducts = sortBy(filteredProducts, ['name']);\r\n        } else {\r\n          sortedProducts = sortBy(filteredProducts, ['name']).reverse();\r\n        }\r\n      break;\r\n      case 'price':\r\n        if (direction === 'asc') {\r\n          sortedProducts = sortBy(filteredProducts, (product) => getRawPrice(product.price));\r\n        } else {\r\n          sortedProducts = sortBy(filteredProducts, (product) => getRawPrice(product.price)).reverse();\r\n        }\r\n      break;\r\n      case 'quantity':\r\n        if (direction === 'asc') {\r\n          sortedProducts = sortBy(filteredProducts, ['quantity']);\r\n        } else {\r\n          sortedProducts = sortBy(filteredProducts, ['quantity']).reverse();\r\n        }\r\n      break;\r\n      default:\r\n      break;\r\n    }\r\n\r\n    this.setState({\r\n      filteredProducts: sortedProducts,\r\n      currentSort: type\r\n    });\r\n  }\r\n\r\n  handleOnSelectProduct = (product) => {\r\n    this.setState({\r\n      cartProducts: [...this.state.cartProducts, product]\r\n    });\r\n\r\n    localStorage.setItem('cartProducts', JSON.stringify(this.state.cartProducts));\r\n  }\r\n\r\n  switchCart = () => {\r\n    this.setState({ showCart: !this.state.showCart });\r\n  }\r\n\r\n  switchMobileMenu = () => {\r\n    this.setState({ showMenu: !this.state.showMenu });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      selectedCategory,\r\n      filteredProducts,\r\n      currentSort,\r\n      cartProducts,\r\n      showCart,\r\n      showMenu\r\n    } = this.state;\r\n\r\n    return (\r\n      <StoreContext.Provider\r\n        value={{\r\n          categories,\r\n          products\r\n        }}\r\n      >\r\n        <AppBar>\r\n          <Toolbar>\r\n            <IconButton\r\n              onClick={this.switchMobileMenu}\r\n              className=\"main-menu-mobile\"\r\n              color=\"inherit\"\r\n              aria-label=\"Menu\"\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" color=\"inherit\">\r\n              Baraton Store\r\n            </Typography>\r\n            <Button onClick={this.switchCart} className=\"cart-button\" color=\"inherit\">Carrito {cartProducts.length}</Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <div className=\"store-container\">\r\n          {showMenu && <div className=\"main-menu\">\r\n            <CategoriesMenu\r\n              onSelectCategory={this.onSelectCategory}\r\n              selectedCategory={selectedCategory}\r\n            />\r\n          </div>}\r\n          <div className=\"products-catalog\">\r\n            <ProductsGrid\r\n              products={filteredProducts}\r\n              selectedCategory={selectedCategory}\r\n              currentSort={currentSort}\r\n              onSearch={this.handleOnSearch}\r\n              onSort={this.handleOnSort}\r\n              onSelectProduct={this.handleOnSelectProduct}\r\n            />\r\n          </div>\r\n          {showCart && <div className=\"checkout\">\r\n            <Checkout products={cartProducts} />\r\n          </div>}\r\n        </div>\r\n      </StoreContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Store;\r\n","import React, { Component } from 'react';\nimport { MuiThemeProvider , createMuiTheme } from '@material-ui/core/styles';\n\nimport './App.css';\n\nimport Store from './containers/Store';\n\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#1976d2',\n    },\n    secondary: {\n      main: '#000'\n    },\n  },\n});\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <MuiThemeProvider theme={theme}>\n          <Store />\n        </MuiThemeProvider>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}